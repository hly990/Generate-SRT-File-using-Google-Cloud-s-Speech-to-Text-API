1
00:00:00,000 --> 00:00:02,500
Here's a quick method to test. If your

2
00:00:02,500 --> 00:00:04,900
application back in is stateless or not,

3
00:00:05,600 --> 00:00:07,700
fire up your client and log

4
00:00:07,700 --> 00:00:09,900
in and send few requests to

5
00:00:09,900 --> 00:00:10,600
your back end.

6
00:00:11,700 --> 00:00:13,800
After that, stop sending requests, go to the

7
00:00:13,800 --> 00:00:15,500
back and restart the process or the

8
00:00:15,500 --> 00:00:17,500
Entire Computer. Where the backend

9
00:00:17,500 --> 00:00:19,800
application lives. Wait for your

10
00:00:19,800 --> 00:00:21,500
back, end to come back up and

11
00:00:21,500 --> 00:00:23,500
running and then go back to the

12
00:00:23,500 --> 00:00:25,700
client and then send

13
00:00:25,700 --> 00:00:26,800
another request.

14
00:00:27,800 --> 00:00:29,900
If that request a new request

15
00:00:29,900 --> 00:00:31,900
succeeds, that means your application back in

16
00:00:31,900 --> 00:00:33,700
is completely stateless. If

17
00:00:33,700 --> 00:00:35,900
that request fails, that means your

18
00:00:35,900 --> 00:00:37,500
application. Depends on some sort of a

19
00:00:37,500 --> 00:00:39,300
state that knows no longer there.

20
00:00:40,300 --> 00:00:42,800
Typical stateless applications or protocols is

21
00:00:42,800 --> 00:00:44,900
HTTP or DNS

22
00:00:45,800 --> 00:00:47,900
while websockets or TCP, or

23
00:00:47,900 --> 00:00:49,800
example of a stateful protocols.

24
00:00:51,100 --> 00:00:53,700
While HGTV does use TCP HTTP

25
00:00:53,700 --> 00:00:55,900
at that application layer if that

26
00:00:55,900 --> 00:00:57,800
TCP connection is distort. It just

27
00:00:57,800 --> 00:00:58,700
creates another one.

